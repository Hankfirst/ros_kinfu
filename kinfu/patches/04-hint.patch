diff --git a/gpu/kinfu_large_scale/include/pcl/gpu/kinfu_large_scale/kinfu.h b/gpu/kinfu_large_scale/include/pcl/gpu/kinfu_large_scale/kinfu.h
index 23f4b40..f94bc22 100644
--- a/gpu/kinfu_large_scale/include/pcl/gpu/kinfu_large_scale/kinfu.h
+++ b/gpu/kinfu_large_scale/include/pcl/gpu/kinfu_large_scale/kinfu.h
@@ -159,11 +159,15 @@ namespace pcl
               MAX_HINT_TYPE
             };
 
-            THint(Type t,Eigen::Affine3f h): transform(h),type(t) {}
-            THint(): type(HINT_TYPE_NONE) {}
+            THint(Type t,const Eigen::Affine3f& h): transform(h),type(t),ignore_minimum_movement(false) {}
+            THint(Type t,const Eigen::Affine3f& h,bool i): transform(h),type(t),ignore_minimum_movement(i) {}
+            THint(): type(HINT_TYPE_NONE), ignore_minimum_movement(false) {}
 
             Eigen::Affine3f transform;
             Type type;
+            bool ignore_minimum_movement;  // Usually, the kinfu won't update if the last movement
+                                           // is under a certain threshold. Set this to true to
+                                           // update anyway.
 
             EIGEN_MAKE_ALIGNED_OPERATOR_NEW;
           };
diff --git a/gpu/kinfu_large_scale/src/kinfu.cpp b/gpu/kinfu_large_scale/src/kinfu.cpp
index 9aff182..b437c76 100644
--- a/gpu/kinfu_large_scale/src/kinfu.cpp
+++ b/gpu/kinfu_large_scale/src/kinfu.cpp
@@ -610,6 +610,7 @@ pcl::gpu::kinfuLS::KinfuTracker::operator() (const DepthMap& depth_raw,const THi
 
   const bool has_hint = (hint.type != THint::HINT_TYPE_NONE);
   const bool has_forced_hint = has_hint && (hint.type == THint::HINT_TYPE_FORCED);
+  const bool ignore_minimum_movement = hint.ignore_minimum_movement;
 
   if (has_hint && global_time_ == 0)
   {
@@ -736,7 +737,7 @@ pcl::gpu::kinfuLS::KinfuTracker::operator() (const DepthMap& depth_raw,const THi
     bool integrate = (rnorm + alpha * tnorm)/2 >= integration_metric_threshold_;
     ///////////////////////////////////////////////////////////////////////////////////////////
     // Volume integration  
-    if (integrate)
+    if (integrate || ignore_minimum_movement)
     {
       integrateTsdfVolume (depth_raw, intr, device_volume_size, device_current_rotation_inv, device_current_translation_local, tsdf_volume_->getTsdfTruncDist (), tsdf_volume_->data (), getCyclicalBufferStructure (), depthRawScaled_);
     }
