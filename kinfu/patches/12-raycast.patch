diff --git a/gpu/kinfu_large_scale/include/pcl/gpu/kinfu_large_scale/raycaster.h b/gpu/kinfu_large_scale/include/pcl/gpu/kinfu_large_scale/raycaster.h
index b7ba4c0..ff53682 100644
--- a/gpu/kinfu_large_scale/include/pcl/gpu/kinfu_large_scale/raycaster.h
+++ b/gpu/kinfu_large_scale/include/pcl/gpu/kinfu_large_scale/raycaster.h
@@ -96,6 +96,10 @@ namespace pcl
         /** \brief clear bounding box */
         void
         clearBoundingBox() {has_bbox_ = false; }
+
+        /** \brief set raycast step (-1 for default) */
+        void
+        setRaycastStep(float step) {raycast_step_ = step; }
         
         /** \brief Runs raycasting algorithm from given camera pose. It writes results to internal fiels.
           * \param[in] volume tsdf volume container
@@ -169,6 +173,8 @@ namespace pcl
         Eigen::Vector3f bbox_min_;
         Eigen::Vector3f bbox_max_;
 
+        float raycast_step_;
+
 public:
 EIGEN_MAKE_ALIGNED_OPERATOR_NEW
 
diff --git a/gpu/kinfu_large_scale/src/cuda/ray_caster.cu b/gpu/kinfu_large_scale/src/cuda/ray_caster.cu
index 7f9bbcc..388d40f 100644
--- a/gpu/kinfu_large_scale/src/cuda/ray_caster.cu
+++ b/gpu/kinfu_large_scale/src/cuda/ray_caster.cu
@@ -275,11 +275,12 @@ namespace pcl
             if (tsdf_prev < 0.f && tsdf > 0.f)
               break;
 
-            if ((weight != 0 && tsdf < 0.f) || (SEARCH_UNKNOWN && weight == 0))
+            bool zero_crossing = tsdf_prev > 0.f && tsdf < 0.f;
+            if (zero_crossing || (SEARCH_UNKNOWN && weight == 0))
             {
               float step_correction = 0.5;
 
-              if (!SEARCH_UNKNOWN || (weight != 0))
+              if (!SEARCH_UNKNOWN || zero_crossing)
               {
                 float Ftdt = interpolateTrilineary (ray_start, ray_dir, time_curr + time_step, buffer);
                 if (isnan (Ftdt))
diff --git a/gpu/kinfu_large_scale/src/raycaster.cpp b/gpu/kinfu_large_scale/src/raycaster.cpp
index 812857c..021c9ef 100644
--- a/gpu/kinfu_large_scale/src/raycaster.cpp
+++ b/gpu/kinfu_large_scale/src/raycaster.cpp
@@ -51,6 +51,7 @@ pcl::gpu::kinfuLS::RayCaster::RayCaster(int rows_arg, int cols_arg, float fx, fl
 { 
   vertex_map_.create(rows * 3, cols);
   normal_map_.create(rows * 3, cols);
+  raycast_step_ = -1.0;
 }
 
 ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
@@ -99,7 +100,10 @@ pcl::gpu::kinfuLS::RayCaster::run(const TsdfVolume& volume, const Affine3f& came
   device_t.y -= buffer->origin_metric.y;
   device_t.z -= buffer->origin_metric.z;
 
-  float tranc_dist = volume.getTsdfTruncDist();  
+  float tranc_dist = volume.getTsdfTruncDist();
+  if (raycast_step_ > 0.0)
+    tranc_dist = raycast_step_;
+
   if (!with_known)
     pcl::device::kinfuLS::raycast (intr, device_R, device_t, tranc_dist, pcl::device::kinfuLS::device_cast<const float3>(volume_size_), volume.data(), buffer, vertex_map_, normal_map_);
   else if (with_known && !has_bbox_)
